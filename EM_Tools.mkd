# EM Tools

https://softstuff.tools/tools.htm://softstuff.tools/tools.html

## 1-1 Meeting Templates, Topics, and Questions

This section is all about the 1-1 meeting. Done well, the 1-1 meeting can be
the single biggest contributor to a team member's satisfaction with their job,
their manager, and the company. But it's tricky to get right because of how
open-ended and unstructured the meeting can be.

[Working the Weekly 1:1](http://eleganthack.com/working-the-weekly-11/)

A very good overview of how to position the 1:1 meeting for success. This
article focuses on the **GROW** framework for structuring the meeting: 

[1-1 Meeting Questions and
Agenda](https://status.net/templates/one-on-one-meeting-template/)

An excellent overview of what a 1-1 meeting is, why it's valuable, and how to
structure them for success. Also includes an agenda template (in MS Word .doc
and .docx format) with more than a dozen suggested open-ended questions to
stimulate conversation. This is a good place to start if you're building a
process for 1-1 meetings.

[The 4 questions you should stop asking during your one-on-one
meetings](https://m.signalvnoise.com/the-4-questions-you-should-stop-asking-during-your-one-on-one-meetings-ed7431da11aa)

You’re probably already asking at least one of them – but it’s never too late
to stop.

## Building Culture

As a manager and leader your buggest impact will be on the culture. It's
intangible and difficult to measure but it is a huge part of growing and
retaining your team. And it changes over time; the culture you build for a
group of five isn't the same as for 500.

[The OS Canvas](https://medium.com/the-ready/the-os-canvas-8253ac249f53)

Organization design is hard. Whether you’re the CEO of a global corporation,
the founder of a venture-backed startup, or a team leader inside one of the
tens of thousands of companies that make our…

## Career Ladders

This section contains links to career ladders and position expectations for
technical staff. Not sure what a career ladder is or why your organization
should have one? The [Wikipedia
page](https://en.wikipedia.org/wiki/Career_ladder)

[CTO vs VP Engineering: What's the Difference? - Ivy Exec
Blog](https://www.ivyexec.com/executive-insights/2015/cto-versus-vp-engineering-whats-the-difference)

For a startup, a big question is determining which hire to make? CTO vs VP of
Engineering? Learn the role for each in this article.

[Engineering Ladders at
Meetup](https://medium.com/making-meetup/engineering-ladders-at-meetup-caacbea4916e)

Clear Expectations is one of the three pillars of management at Meetup. In my
role as a fractional VP of Engineering, I was ecstatic to help Meetup’s HR team
develop a new cross-company leveling…

[Patreon's Engineering Career Ladder Microsite](https://levels.patreon.com/)

Expectations for 6 levels of individual contributor, across 5 categories;
Technical, Execution, Collaboration &amp; Communication, Influence, and
Maturity. Searchable and filterable. A fantastic resource and highly
recommended.

[Sharing Our Engineering
Ladder](http://dresscode.renttherunway.com/blog/ladder)

I gave a talk last year at the NYC CTO summit on how and why to introduce
structure into an engineering organization (slides available here ). I am a fan
of structure and the clarity that it can provide an organization, despite its
potential downsides. I'm not going to talk about the WHY very much

[Engineering
Manager](https://github.com/ex-ttmers/values-and-expectations/blob/master/engineering_manager.md)

Expectations for an Engineering Manager at Think Through Math. Note that some
expectations are industry-specific.

[Senior Software
Engineer](https://github.com/ex-ttmers/values-and-expectations/blob/master/senior_software_engineer.md)

Expectations for a Senior Software Engineer at Think Through Math. Note that
some expectations are industry-specific.

[Software
Engineer](https://github.com/ex-ttmers/values-and-expectations/blob/master/software_engineer.md)

Expectations for a Software Engineer at Think Through Math. Note that some
expectations are industry-specific.

## Diversity & Inclusion

This section includes publications on how to incorporate D&amp;I as key
component of your organizational strategy. It also includes examples of
organizations that are having success with D&amp;I initiatives or are doing a
good job of being transparent about their progress and their goals.

[How Slack Got Ahead in
Diversity](https://www.theatlantic.com/technology/archive/2018/04/how-slack-got-ahead-in-diversity/558806/)

Slack released a [diversity report in
2017](https://slackhq.com/diversity-at-slack-8dea4aaff7f1)

## Performance Reviews, Feedback, and Praise

Performance reviews and feedback are tasks that are typically brand new to
people coming to management from individual contributor roles. Writing
effective feedback can be a challenge for technical people who are taught to be
concise when writing. And notably, younger generations find the process of
performance reviews [more
stressful](https://www.tinypulse.com/blog/difference-in-perception-between-generations)

But your team needs feedback and guidance on their performance. And whether we
like to admit it or not, everyone likes being thanked for their work.

[Effective Phrases for Performance
Appraisals](https://www.amazon.com/Effective-Phrases-Performance-Appraisals-Evaluations/dp/1882423135/)

The U.S. military does a 

This tool has been used for decades to help officers write evaluations,
nominations and reviews. It's not a book so much as a compilation of
categorized short phrases. Some topics include Decision Making, Interpersonal
Skills, Quality, Professionalism, and Dealing With Stress.

If you work for a larger organization this is a good book to expense and share
among the management team.

[Free Employee Performance Review
Templates](https://www.smartsheet.com/free-employee-performance-review-templates)

Several templates in Microsoft Word and Excel formats that might help you in
establishing or improving your performance review process. Notably they also
include a evaluation forms for peers and managers, which would be useful to
help you implement a 360° feedback process.

## Interview Process Descriptions

This section mainly includes articles, blog posts and descriptions of
organizations' interview processes.

For an organization to write up and share information about their interview
process, they must feel pretty strongly about it.

Since an interview process is more than just the document itself, these will
take more effort to implement in your organization. Also I highly recommend
getting HR involved here so you don't accidentally create a discriminatory
process.

[Why we use homework to recruit
engineers](https://adhocteam.us/2018/02/26/why-we-use-homework-to-recruit-engineers/)

A blog post about how Ad Hoc uses take-home evaluations to evaluate technical
skills, since they are a remote-first company so they don't do in-person
interviews. This post describes their process, the benefits they've found, and
specifically how their process is designed to democratize candidates and
eliminate sources of hidden bias.

[How we hire engineers](https://auth0.com/blog/how-we-hire-engineers/)

A very in-depth article on the interview process at Auth0. It's refreshing to
see organizations provide this level of transparency in to the interview
process. They also post some statistics on how many hires they make as a
percentage of the recruiting pipeline.

The process covers the following steps:

This would be a good starting point for a startup-to-growth-stage company to
use to evaluate its hiring process, or to use as a template to publish its own.

[The Flipped Interview](https://github.com/jwrubel/flipped-interview)

[Flipped Classroom](https://en.wikipedia.org/wiki/Flipped_classroom)

The core concept in a flipped interview is that all of the Q&amp;A and work
happens asynchronously, ahead of the interview. The interview itself, instead
of being a series of questions that candidates have to answer on the spot, is
used to discuss their responses.

This is a model that's been used with interview scenarios but to my knowledge
it's not been applied to the interview itself. This model would work especially
well for a remote position.

There's an accompanying [slide
deck](https://www.beautiful.ai/deck/-LBBNBKF5JwsC5q8VSrv/So-what-do-you-do-in-your-spare-time)

[Improving Our Engineering Interview
Process](https://engineering.foursquare.com/improving-our-engineering-interview-process-106173ba25a9)

An article describing Foursquare's interview process after they switched to a
take-home exercise. The article includes some information on their rubric and
some lessons learned.

[How To Find and Hire Your First Engineer: For Early-Stage Startups -
atrium](https://www.atrium.co/blog/hire-first-engineer/)

Hiring your first engineer at a startup is incredibly hard. As a founder,
you’re already stretched dangerously thin on time.…Read On

[Hiring Without
Whiteboards](https://github.com/poteto/hiring-without-whiteboards)

As the title implies, this is actually just the front end for an Airtable DB of
companies that have pledged to interview without whiteboard coding exercises or
CS trivia questions.

From the README:

It's also worth reviewing the short list of
[recommendations](https://github.com/poteto/hiring-without-whiteboards/blob/master/RECOMMENDATIONS.md)

[How to Recruit and Hire When You Need to Move
Fast](https://medium.com/s/story/how-to-recruit-and-hire-when-you-need-to-move-fast-2d5f21fab5bc)

As you scale from hiring 10 people a year to 10 people a week, a small number
of processes can go a long way

[A better way to interview software
engineers](https://fulcrum.lever.co/a-better-way-to-interview-software-engineers-fa9b5d2b5316)

An interview process that Lever is trying out that includes a mock code review
as its core method for identifying developer skill. Lever provides the
candidate a pull request of about 200 lines and asks the candidate to provide
feedback on how to improve it.

The candidate's feedback is then evaluated in three areas:

[A Walkthrough Guide to Finding an Engineering Job at
Slack](https://slack.engineering/a-walkthrough-guide-to-finding-an-engineering-job-at-slack-dc07dd7b0144)

Slack has received a lot of praise for its growth trajectory and specifically
for the [diversity of its technical
team](https://www.theatlantic.com/technology/archive/2018/04/how-slack-got-ahead-in-diversity/558806/)

## Interview Question Banks

This section contains links to questions you can use to develop technical
questions for candidates, either to ask in an interview or for candidates to
fill out as part of an application.

[10 Interview Questions Every JavaScript Developer Should
Know](https://medium.com/javascript-scene/10-interview-questions-every-javascript-developer-should-know-6fa6bdf5ad95)

a list of questions and ideal responses for interviewing JavaScript developers.
The questions are fairly broad but the author includes both 'Good to hear' and
'Red flags' for candidate responses.

[Continuum Analytics interview
questions](https://github.com/ContinuumIO/interview-questions)

A list of software-developer-specific interview questions, meant to be answered
before an interview (as part of the resume submission).

[Front-end developer interview
questions](https://h5bp.github.io/Front-end-Developer-Interview-Questions/)

An extremely in-depth and well-curated list of interview questions mainly for
front-end web developers. Covers HTML, CSS, JS, coding, and 'fun' categories.

Note that because of its popularity, people have taken the time to develop and
[post](https://github.com/yangshun/front-end-interview-handbook)
[answers](https://github.com/utatti/Front-end-Developer-Interview-Questions-And-Answers/tree/master/answers)

[Hire a Top Performer Every Time with These Interview
Questions](http://firstround.com/review/hire-a-top-performer-every-time-with-these-interview-questions/)

Koru CEO Kristen Hamilton helps hundreds of people hire and get hired every
year. These are the traits she knows translate into excellent performance on
the job.

[iOS developer interview
questions](https://github.com/dashvlas/awesome-ios-interview)

iOS developer interview questions. Unfortunately the content is only available
as [an app](http://appstore.com/awesomeinterview)

[Senior Web Developer interview
questions](https://resources.workable.com/senior-web-developer-interview-questions)

An overview of what distinguishes a senior developer from a developer, and a
list of questions in the following categories: Operational and Situational
questions, Role-specific questions, and Behavioral questions.

## Technical Interview Take-Home Tests &amp; Scenarios

This section contains links to interview scenarios and take-home tests.
Typically these are used in conjunction with more traditional interview
questions to try and evaluate a candidate's skills. Be careful however -
interview scenarios can be controversial because they take a lot of a
candidate's time and can discriminate against candidates who have
responsibilities that limit their availability to work off-hours.

[A Voight-Kampff Test for Identifying Engineering
Managers](https://hackernoon.com/a-voight-kampff-test-for-identifying-engineering-managers-bb8512c70857)

When I joined Reddit in late 2016, I was faced with a unique challenge:
tripling the size of the engineering organization within a year. At the time
there were about 35 engineers on the team and a…

[Ad Hoc homework problems](https://github.com/adhocteam/homework)

Homework exercises to accompany Ad Hoc's developer interviews. There are seven
exercises included in total, targeted at different hiring roles; front-end
developer, software engineer/full-stack, back-end developer, DevOps/SRE, UX
Designer, and Engineering Lead.

[Algorithm
Questions](https://github.com/yangshun/tech-interview-handbook/tree/master/algorithms)

This was written primarily from the candidate's point of view but many of these
questions could be used as simple coding exercises. They focus on specific data
structures and programming concepts so they're probably not appropriate for
experienced candidates. Some examples:

[Learning Registry Developer
Test](https://github.com/learningtapestry/learning-registry-developer-test)

A back-end developer test that's designed around having the candidate write a
wrapper for an existing API, and present a couple of methods to allow users to
pull and filter the data. Originally designed for Ruby/Rails but could be
adapted to .NET, Java or any server-side language.

[Simple Interview
Exercises](https://medium.com/@rodbegbie/find-open-restaurants-an-engineering-take-home-test-dissected-1ada20282ceb)

An article and post-natum on the author's experience with a take-home interview
test. It includes a summary of the actual test as well as the author's thoughts
on what went well about the process and what he would have changed.

[Hiring Assignment for Product
Managers](https://www.slideshare.net/EugeneLevin/test-36020392)

A 27-slide presentation describing a hiring assignment for Uber product manager
candidates. It centers around the question, data shows that there are more drop
offs than pick ups at the airport. Why is this so and what would you do in the
product to change that?

This is a detailed case study that's very specific to Uber but could be used
for inspiration. Note that the slide deck also includes the author's
submission.

[Product Manager Case
Interview](http://www.venturegrit.com/what-everybody-ought-to-know-about-the-product-manager-case-interview/)

An article on screening product managers. It has a pretty good case interview
scenario included although it's not specific. This is probably not enough for
you to use to write a Product Manager interview scenario by itself, but it will
definitely help inform your thinking, and there are very few open resources in
this area.

[Simple Interview
Exercises](https://github.com/volunteermatch/interview-exercises/tree/master/java)

A few very simple interview exercises, written in java. Examples include
building a [basic
calculator](https://github.com/volunteermatch/interview-exercises/tree/master/java/calculator)
[search-engine friendly
URLs](https://github.com/volunteermatch/interview-exercises/tree/master/java/friendlyurl)
[simple
hashmap](https://github.com/volunteermatch/interview-exercises/tree/master/java/simplehashmap)

These would be good for using with a more junior developer or for someone you
are considering whose only development experience is at a coding bootcamp.

## Job Descriptions

This section contains links to job descriptions for various technical roles. We
don't include links to posts on job boards because those aren't guaranteed to
be accessible beyond the duration of the post.

[Various Technical Job Description
Templates](https://enlist.io/resources/job-description-templates/information-technology)

Job description templates for a wide variety of technical roles. Each
description has a basic description of the role, a bulleted list of
responsibilities, and a list of requirements for the position. These are good
places to start if you're not even sure where to begin. Templates are available
for the following roles:

- [Data Scientist](https://enlist.io/resources/job-description-template/data-scientist-job-description-template/)
- [Embedded Systems Engineer](https://enlist.io/resources/job-description-template/embedded-systems-engineer-job-description-template/)
- [React Developer](https://enlist.io/resources/job-description-template/react-developer-job-description-template/)
- [Mobile Developer](https://enlist.io/resources/job-description-template/mobile-developer-job-description-template/)
- [DevOps Engineer](https://enlist.io/resources/job-description-template/devops-engineer-job-description-template/)
- [Network Administrator](https://enlist.io/resources/job-description-template/network-administrator-job-description-template/)
- [Back-end Engineer](https://enlist.io/resources/job-description-template/backend-engineer-job-description-template)
- [Cybersecurity Specialist](https://enlist.io/resources/job-description-template/cybersecurity-specialist-job-description-template/)
- [Systems Engineer](https://enlist.io/resources/job-description-template/systems-engineer-job-description-template/)
- [Data Analyst](https://enlist.io/resources/job-description-template/data-analyst-job-description-template/)
- [Database Administrator](https://enlist.io/resources/job-description-template/database-administrator-job-description-template/)
- [Game Developer](https://enlist.io/resources/job-description-template/game-developer-job-description-template/)
- [Front-end Engineer](https://enlist.io/resources/job-description-template/front-end-engineer-job-description-template/)

For those who are looking for them, Enlist also offers templates for

- [finance](https://enlist.io/resources/job-description-templates/finance)
- [marketing](https://enlist.io/resources/job-description-templates/marketing)
- [legal](https://enlist.io/resources/job-description-templates/legal)
- [operations](https://enlist.io/resources/job-description-templates/operations)
- [H.R.](https://enlist.io/resources/job-description-templates/human-resources)
- [design](https://enlist.io/resources/job-description-templates/design)
- [healthcare](https://enlist.io/resources/job-description-templates/health)

[Open Source Program Job Descriptions](https://github.com/todogroup/job-descriptions)

A listing of open source program/office job descriptions from the industry.
Roles include everything from open source evangelist to program manager.
Companies include Microsoft, twitter, Box, Capital One, and Huawei. Contents
are in markdown format.

## Managing Up

This is a category for individual contributors (although mid-level managers
will find it useful, too). We expect our managers to have all the answers (and
many of them manage like they do!), but sometimes they need a little guidance.

If you're struggling to find ways to work with your manager, or maybe you
aspire to manage one day, articles in this section might help. Because this is
more of a strategic topic, these tools may not be as easy to put in to
practice, but they're still worth the read.

[Advice from experienced leaders on managing
up](https://getlighthouse.com/blog/managing-up-advice-experienced-leaders/)

Advice and contributions from experienced management consultants on the process
of managing one's manager.

[The Art of Managing
Up](http://uthscsa.edu/gme/documents/TheArtofManagingUp.pdf)

An overview of what managing up means in an organization, with a handful of
guidelines for how to be successful: communicate, no surprises, provide
solutions not problems, be honest and trustworthy, be loyal and committed,
understand your boss’s perspective and agenda, and understand your boss’s
preferences.

## Objectives &amp; Key Results (OKR)

[Objectives &amp; Key Results](https://en.wikipedia.org/wiki/OKR) is an
organizational goals and objectives management framework created by Andy Grove
at Intel and made famous at Google and other companies.

There are not many tools for it because it itself is a tool, but if you are
looking for a way to set goals and objectives for your team, OKR is a great
place to start.

[OKR report spreadsheet template by
Weekdone](https://docs.google.com/spreadsheets/d/1DGOSjkW70bYsgtubVoEYNi65cS4U9po4GGUTpfhEVOk)

An OKR template implemented in Google Sheets. Make a copy and customize as you
see fit. It's also worth reading the [accompanying
article](https://weekdone.com/resources/templates/okr-report-spreadsheet-template)

## Miscellaneous Resources

For those rare moments when you're not looking for help fighting that one
specific fight, there are some great resources you can take advantage of in
your quest to become better as a leader and manager.

These aren't necessarily things you can put in to practice right away, but
they're definitely worth your time.

[The Manager's
Path](https://smile.amazon.com/Managers-Path-Leaders-Navigating-Growth/dp/1491973897/)

It's 2018, but did you know you can still learn things from reading books? If
you're making the transition from individual contributor to manager or looking
to improve as a leader of technical staff, you need this book. It's extremely
thorough and written by someone with deep experience in this area. A kindle
version is available too, if you prefer.

[software lead weekly](https://softwareleadweekly.com/)

A curated list of articles, information and other content targeted at
software-focused leaders. It's been around since 2012! One email a week, and
definitely worth your subscription.

 
[The Servant - A Simple Story About the True Essence of
Leadership](https://smile.amazon.com/Servant-Simple-Story-Essence-Leadership-ebook/dp/B001AL662O/) 

The Servant: A Simple Story About the True Essence of Leadership - Kindle
edition by James C. Hunter. Download it once and read it on your Kindle device,
PC, phones or tablets. Use features like bookmarks, note taking and
highlighting while reading The Servant: A Simple Story About the True Essence
of Leadership.

[James Wrubel](https://twitter.com/jameswrubel)
[Undraw](https://undraw.co/illustrations)
